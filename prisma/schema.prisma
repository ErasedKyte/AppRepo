generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Project {
  id        Int       @id @default(autoincrement())
  name      String
  sarfForms SarfForm? @relation("ProjectSarfForm")
  survey    Survey?   @relation("ProjectSurvey")
  sfaForms  SFAForm?  @relation("ProjectSFAForm")
}

model SarfForm {
  id                     Int      @id @default(autoincrement())
  projectId              Int      @unique
  project                Project  @relation("ProjectSarfForm", fields: [projectId], references: [id])
  submittedAt            DateTime @default(now())
  status                 String   @default("pending")
  ProjectName            String
  NominalSiteId          String
  NominalSiteName        String
  RoadName               String
  BlockNumber            Int
  Longitude              Float
  Latitude               Float
  SearchRadius           Int
  CellType               String
  NoOfAntenna1           Int
  AntennaSize1           String
  RequiredAntennaHeight1 Int
  AntennaAzimuth1        Float
  NoOfAntenna2           Int
  AntennaSize2           String
  RequiredAntennaHeight2 Int
  AntennaAzimuth2        Float
  NoOfAntenna3           Int
  AntennaSize3           String
  RequiredAntennaHeight3 Int
  AntennaAzimuth3        Float
  NoOfAntenna4           Int?
  AntennaSize4           String?
  RequiredAntennaHeight4 Int?
  AntennaAzimuth4        Float?
}

model Survey {
  id                  Int     @id @default(autoincrement())
  projectId           Int     @unique
  project             Project @relation("ProjectSurvey", fields: [projectId], references: [id])
  latLonOpt1          String
  buildingPlotOpt1    String
  gateOpt1            String
  roadOpt1            String
  blockOpt1           String
  areaOpt1            String
  latLonOpt2          String
  buildingPlotOpt2    String
  gateOpt2            String
  roadOpt2            String
  blockOpt2           String
  areaOpt2            String
  latLonOpt3          String
  buildingPlotOpt3    String
  gateOpt3            String
  roadOpt3            String
  blockOpt3           String
  areaOpt3            String
  contactName         String
  contactTel          String
  procurementComments String
}

model SFAForm {
  id                    Int                     @id @default(autoincrement())
  projectId             Int                     @unique
  siteOwnerContact      String
  siteId                String
  siteName              String
  optionNo              String
  siteLocation          String
  siteType              String
  traZone               String
  siteCoordinates       String
  address               String
  surveyDate            DateTime
  siteSelectionApproval SiteSelectionApproval[]
  remarks               String
  project               Project                 @relation("ProjectSFAForm", fields: [projectId], references: [id])
}

model SiteSelectionApproval {
  id             Int      @id @default(autoincrement())
  team           String
  responsibility String
  acceptance     Boolean
  name           String
  sign           String
  date           DateTime
  comments       String
  sfaFormId      Int
  sfaForm        SFAForm  @relation(fields: [sfaFormId], references: [id])
}
